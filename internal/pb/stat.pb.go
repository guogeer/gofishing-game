// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: internal/pb/stat.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoomStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayRoundCount int32 `protobuf:"varint,1,opt,name=PlayRoundCount,proto3" json:"PlayRoundCount,omitempty"` // 局数
}

func (x *RoomStat) Reset() {
	*x = RoomStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pb_stat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomStat) ProtoMessage() {}

func (x *RoomStat) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_stat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomStat.ProtoReflect.Descriptor instead.
func (*RoomStat) Descriptor() ([]byte, []int) {
	return file_internal_pb_stat_proto_rawDescGZIP(), []int{0}
}

func (x *RoomStat) GetPlayRoundCount() int32 {
	if x != nil {
		return x.PlayRoundCount
	}
	return 0
}

type BingoModeStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayRoundCount int32 `protobuf:"varint,1,opt,name=PlayRoundCount,proto3" json:"PlayRoundCount,omitempty"` // 局数
}

func (x *BingoModeStat) Reset() {
	*x = BingoModeStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pb_stat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BingoModeStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BingoModeStat) ProtoMessage() {}

func (x *BingoModeStat) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_stat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BingoModeStat.ProtoReflect.Descriptor instead.
func (*BingoModeStat) Descriptor() ([]byte, []int) {
	return file_internal_pb_stat_proto_rawDescGZIP(), []int{1}
}

func (x *BingoModeStat) GetPlayRoundCount() int32 {
	if x != nil {
		return x.PlayRoundCount
	}
	return 0
}

type ItemStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cost    int64 `protobuf:"varint,1,opt,name=Cost,proto3" json:"Cost,omitempty"`       // 消耗
	Add     int64 `protobuf:"varint,2,opt,name=Add,proto3" json:"Add,omitempty"`         // 产出
	Count   int32 `protobuf:"varint,3,opt,name=Count,proto3" json:"Count,omitempty"`     // 次数
	CopyNum int64 `protobuf:"varint,4,opt,name=CopyNum,proto3" json:"CopyNum,omitempty"` // 余额
}

func (x *ItemStat) Reset() {
	*x = ItemStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pb_stat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemStat) ProtoMessage() {}

func (x *ItemStat) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_stat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemStat.ProtoReflect.Descriptor instead.
func (*ItemStat) Descriptor() ([]byte, []int) {
	return file_internal_pb_stat_proto_rawDescGZIP(), []int{2}
}

func (x *ItemStat) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *ItemStat) GetAdd() int64 {
	if x != nil {
		return x.Add
	}
	return 0
}

func (x *ItemStat) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ItemStat) GetCopyNum() int64 {
	if x != nil {
		return x.CopyNum
	}
	return 0
}

type UserDayStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayRoundCount  int32   `protobuf:"varint,1,opt,name=PlayRoundCount,proto3" json:"PlayRoundCount,omitempty"`
	FirstPayNum     float64 `protobuf:"fixed64,2,opt,name=FirstPayNum,proto3" json:"FirstPayNum,omitempty"`
	PayNum          float64 `protobuf:"fixed64,3,opt,name=PayNum,proto3" json:"PayNum,omitempty"`
	WatchAdNum      int32   `protobuf:"varint,4,opt,name=WatchAdNum,proto3" json:"WatchAdNum,omitempty"`
	IsEnter         bool    `protobuf:"varint,5,opt,name=IsEnter,proto3" json:"IsEnter,omitempty"`
	RealFirstPayNum float64 `protobuf:"fixed64,6,opt,name=RealFirstPayNum,proto3" json:"RealFirstPayNum,omitempty"` // 首次付费。不考虑测试订单
	RealPayNum      float64 `protobuf:"fixed64,7,opt,name=RealPayNum,proto3" json:"RealPayNum,omitempty"`           // 付费。不考虑测试订单
}

func (x *UserDayStat) Reset() {
	*x = UserDayStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pb_stat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDayStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDayStat) ProtoMessage() {}

func (x *UserDayStat) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_stat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDayStat.ProtoReflect.Descriptor instead.
func (*UserDayStat) Descriptor() ([]byte, []int) {
	return file_internal_pb_stat_proto_rawDescGZIP(), []int{3}
}

func (x *UserDayStat) GetPlayRoundCount() int32 {
	if x != nil {
		return x.PlayRoundCount
	}
	return 0
}

func (x *UserDayStat) GetFirstPayNum() float64 {
	if x != nil {
		return x.FirstPayNum
	}
	return 0
}

func (x *UserDayStat) GetPayNum() float64 {
	if x != nil {
		return x.PayNum
	}
	return 0
}

func (x *UserDayStat) GetWatchAdNum() int32 {
	if x != nil {
		return x.WatchAdNum
	}
	return 0
}

func (x *UserDayStat) GetIsEnter() bool {
	if x != nil {
		return x.IsEnter
	}
	return false
}

func (x *UserDayStat) GetRealFirstPayNum() float64 {
	if x != nil {
		return x.RealFirstPayNum
	}
	return 0
}

func (x *UserDayStat) GetRealPayNum() float64 {
	if x != nil {
		return x.RealPayNum
	}
	return 0
}

type StatBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlineSecs    int32                  `protobuf:"varint,2,opt,name=OnlineSecs,proto3" json:"OnlineSecs,omitempty"`                                                                               // 在线时长
	PayNum        float64                `protobuf:"fixed64,8,opt,name=PayNum,proto3" json:"PayNum,omitempty"`                                                                                      // 充值金额
	Items         map[int32]*ItemStat    `protobuf:"bytes,9,rep,name=Items,proto3" json:"Items,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 物品消耗产出统计
	LastPayTime   string                 `protobuf:"bytes,14,opt,name=LastPayTime,proto3" json:"LastPayTime,omitempty"`                                                                             // 上次付费时间
	LastItemWay   string                 `protobuf:"bytes,15,opt,name=LastItemWay,proto3" json:"LastItemWay,omitempty"`                                                                             // 上次消耗日志
	LastEnterTime string                 `protobuf:"bytes,16,opt,name=LastEnterTime,proto3" json:"LastEnterTime,omitempty"`                                                                         // 上次进入游戏时间
	LastLeaveTime string                 `protobuf:"bytes,17,opt,name=LastLeaveTime,proto3" json:"LastLeaveTime,omitempty"`                                                                         // 上次离开时间
	LoginDayNum   int32                  `protobuf:"varint,18,opt,name=LoginDayNum,proto3" json:"LoginDayNum,omitempty"`                                                                            // 连续登陆天数
	ClientVersion string                 `protobuf:"bytes,19,opt,name=ClientVersion,proto3" json:"ClientVersion,omitempty"`                                                                         // 登陆版本
	CardNum       int32                  `protobuf:"varint,20,opt,name=CardNum,proto3" json:"CardNum,omitempty"`                                                                                    // 选卡数
	Day           map[int32]*UserDayStat `protobuf:"bytes,21,rep,name=Day,proto3" json:"Day,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`    // 每天每日统计。KEY格式YYYYMMDD
	LastServer    string                 `protobuf:"bytes,23,opt,name=LastServer,proto3" json:"LastServer,omitempty"`                                                                               // 上次访问的server
	CopyLevel     int32                  `protobuf:"varint,40,opt,name=CopyLevel,proto3" json:"CopyLevel,omitempty"`                                                                                // 等级
	FirstPayNum   float64                `protobuf:"fixed64,43,opt,name=FirstPayNum,proto3" json:"FirstPayNum,omitempty"`
}

func (x *StatBin) Reset() {
	*x = StatBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pb_stat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatBin) ProtoMessage() {}

func (x *StatBin) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_stat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatBin.ProtoReflect.Descriptor instead.
func (*StatBin) Descriptor() ([]byte, []int) {
	return file_internal_pb_stat_proto_rawDescGZIP(), []int{4}
}

func (x *StatBin) GetOnlineSecs() int32 {
	if x != nil {
		return x.OnlineSecs
	}
	return 0
}

func (x *StatBin) GetPayNum() float64 {
	if x != nil {
		return x.PayNum
	}
	return 0
}

func (x *StatBin) GetItems() map[int32]*ItemStat {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StatBin) GetLastPayTime() string {
	if x != nil {
		return x.LastPayTime
	}
	return ""
}

func (x *StatBin) GetLastItemWay() string {
	if x != nil {
		return x.LastItemWay
	}
	return ""
}

func (x *StatBin) GetLastEnterTime() string {
	if x != nil {
		return x.LastEnterTime
	}
	return ""
}

func (x *StatBin) GetLastLeaveTime() string {
	if x != nil {
		return x.LastLeaveTime
	}
	return ""
}

func (x *StatBin) GetLoginDayNum() int32 {
	if x != nil {
		return x.LoginDayNum
	}
	return 0
}

func (x *StatBin) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *StatBin) GetCardNum() int32 {
	if x != nil {
		return x.CardNum
	}
	return 0
}

func (x *StatBin) GetDay() map[int32]*UserDayStat {
	if x != nil {
		return x.Day
	}
	return nil
}

func (x *StatBin) GetLastServer() string {
	if x != nil {
		return x.LastServer
	}
	return ""
}

func (x *StatBin) GetCopyLevel() int32 {
	if x != nil {
		return x.CopyLevel
	}
	return 0
}

func (x *StatBin) GetFirstPayNum() float64 {
	if x != nil {
		return x.FirstPayNum
	}
	return 0
}

type Maintain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime string `protobuf:"bytes,1,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime   string `protobuf:"bytes,2,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=Content,proto3" json:"Content,omitempty"`
	AllowList string `protobuf:"bytes,4,opt,name=AllowList,proto3" json:"AllowList,omitempty"`
}

func (x *Maintain) Reset() {
	*x = Maintain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_pb_stat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Maintain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Maintain) ProtoMessage() {}

func (x *Maintain) ProtoReflect() protoreflect.Message {
	mi := &file_internal_pb_stat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Maintain.ProtoReflect.Descriptor instead.
func (*Maintain) Descriptor() ([]byte, []int) {
	return file_internal_pb_stat_proto_rawDescGZIP(), []int{5}
}

func (x *Maintain) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Maintain) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *Maintain) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Maintain) GetAllowList() string {
	if x != nil {
		return x.AllowList
	}
	return ""
}

var File_internal_pb_stat_proto protoreflect.FileDescriptor

var file_internal_pb_stat_proto_rawDesc = []byte{
	0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x62, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x32, 0x0a, 0x08,
	0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x37, 0x0a, 0x0d, 0x42, 0x69, 0x6e, 0x67, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x52,
	0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x08, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x41, 0x64, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x41, 0x64, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x70, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x43, 0x6f, 0x70, 0x79, 0x4e, 0x75, 0x6d, 0x22, 0xf3, 0x01, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x50,
	0x6c, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x79, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x50,
	0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x50, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a,
	0x0a, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x49, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x49, 0x73, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x6c, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0f, 0x52, 0x65, 0x61, 0x6c, 0x46, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x79, 0x4e, 0x75,
	0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x52, 0x65, 0x61, 0x6c, 0x50, 0x61, 0x79, 0x4e, 0x75,
	0x6d, 0x22, 0xfa, 0x04, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x74, 0x42, 0x69, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x63, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x50, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x50,
	0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x2c, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x42, 0x69,
	0x6e, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x61,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x57, 0x61, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x57, 0x61, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x4c, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4c, 0x61, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x79, 0x4e,
	0x75, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44,
	0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43, 0x61,
	0x72, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x03, 0x44, 0x61, 0x79, 0x18, 0x15, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x42, 0x69, 0x6e, 0x2e,
	0x44, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x44, 0x61, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x43, 0x6f, 0x70, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x43, 0x6f, 0x70, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x46, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x1a, 0x46, 0x0a,
	0x0a, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x62, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x47, 0x0a, 0x08, 0x44, 0x61, 0x79, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7a,
	0x0a, 0x08, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_pb_stat_proto_rawDescOnce sync.Once
	file_internal_pb_stat_proto_rawDescData = file_internal_pb_stat_proto_rawDesc
)

func file_internal_pb_stat_proto_rawDescGZIP() []byte {
	file_internal_pb_stat_proto_rawDescOnce.Do(func() {
		file_internal_pb_stat_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_pb_stat_proto_rawDescData)
	})
	return file_internal_pb_stat_proto_rawDescData
}

var file_internal_pb_stat_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_internal_pb_stat_proto_goTypes = []interface{}{
	(*RoomStat)(nil),      // 0: pb.RoomStat
	(*BingoModeStat)(nil), // 1: pb.BingoModeStat
	(*ItemStat)(nil),      // 2: pb.ItemStat
	(*UserDayStat)(nil),   // 3: pb.UserDayStat
	(*StatBin)(nil),       // 4: pb.StatBin
	(*Maintain)(nil),      // 5: pb.Maintain
	nil,                   // 6: pb.StatBin.ItemsEntry
	nil,                   // 7: pb.StatBin.DayEntry
}
var file_internal_pb_stat_proto_depIdxs = []int32{
	6, // 0: pb.StatBin.Items:type_name -> pb.StatBin.ItemsEntry
	7, // 1: pb.StatBin.Day:type_name -> pb.StatBin.DayEntry
	2, // 2: pb.StatBin.ItemsEntry.value:type_name -> pb.ItemStat
	3, // 3: pb.StatBin.DayEntry.value:type_name -> pb.UserDayStat
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_internal_pb_stat_proto_init() }
func file_internal_pb_stat_proto_init() {
	if File_internal_pb_stat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_pb_stat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pb_stat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BingoModeStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pb_stat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pb_stat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDayStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pb_stat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_pb_stat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Maintain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_pb_stat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_pb_stat_proto_goTypes,
		DependencyIndexes: file_internal_pb_stat_proto_depIdxs,
		MessageInfos:      file_internal_pb_stat_proto_msgTypes,
	}.Build()
	File_internal_pb_stat_proto = out.File
	file_internal_pb_stat_proto_rawDesc = nil
	file_internal_pb_stat_proto_goTypes = nil
	file_internal_pb_stat_proto_depIdxs = nil
}
